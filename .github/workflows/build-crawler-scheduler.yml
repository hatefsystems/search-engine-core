name: ðŸ“… Build Crawler Scheduler

on:
  workflow_call:
    inputs:
      docker_image:
        required: true
        type: string
      docker_tag:
        required: true
        type: string
      cache_version:
        required: false
        type: string
        default: '1'
      force_rebuild:
        description: 'Force rebuild even if source hash matches'
        required: false
        type: boolean
        default: false

permissions:
  contents: read
  packages: write
  actions: write

jobs:
  build-crawler-scheduler:
    name: ðŸ“… Build Crawler Scheduler
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Calculate source hash for crawler-scheduler
      id: source-hash
      run: |
        # Calculate hash of all relevant source files
        SOURCE_HASH=$(find ./crawler-scheduler -type f \( -name "*.py" -o -name "*.txt" -o -name "Dockerfile" \) -exec sha256sum {} \; | sort | sha256sum | cut -d' ' -f1)
        echo "hash=$SOURCE_HASH" >> $GITHUB_OUTPUT
        echo "ðŸ“¦ Source hash: $SOURCE_HASH"

    - name: Check if rebuild is needed
      id: check-rebuild
      run: |
        # Check if force rebuild is requested
        if [ "${{ inputs.force_rebuild }}" = "true" ]; then
          echo "ðŸ”¨ Force rebuild requested"
          echo "rebuild_needed=true" >> $GITHUB_OUTPUT
          exit 0
        fi
        
        # Try to pull existing image
        if docker pull ${{ inputs.docker_image }}:${{ inputs.docker_tag }} 2>/dev/null; then
          # Check if image has the same source hash label
          EXISTING_HASH=$(docker inspect ${{ inputs.docker_image }}:${{ inputs.docker_tag }} --format='{{index .Config.Labels "source-hash"}}' 2>/dev/null || echo "")
          
          if [ "$EXISTING_HASH" = "${{ steps.source-hash.outputs.hash }}" ]; then
            echo "âœ… Image is up-to-date (hash: $EXISTING_HASH)"
            echo "rebuild_needed=false" >> $GITHUB_OUTPUT
          else
            echo "ðŸ”„ Source files changed (old: $EXISTING_HASH, new: ${{ steps.source-hash.outputs.hash }})"
            echo "rebuild_needed=true" >> $GITHUB_OUTPUT
          fi
        else
          echo "ðŸ†• Image not found, building from scratch"
          echo "rebuild_needed=true" >> $GITHUB_OUTPUT
        fi

    - name: Build Crawler Scheduler Service Image
      if: steps.check-rebuild.outputs.rebuild_needed == 'true'
      uses: docker/build-push-action@v5
      with:
        context: ./crawler-scheduler
        file: ./crawler-scheduler/Dockerfile
        tags: ${{ inputs.docker_image }}:${{ inputs.docker_tag }}
        labels: |
          source-hash=${{ steps.source-hash.outputs.hash }}
          build-date=${{ github.event.head_commit.timestamp }}
        load: true
        push: true
        cache-from: type=gha
        cache-to: type=gha,mode=max

