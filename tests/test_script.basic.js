function calculateTotalPrice(items,taxRate=.08){let subtotal=0;for(const item of items)item.price&&item.quantity&&(subtotal+=item.price*item.quantity,console.log("Processing item:",item.name));const taxAmount=subtotal*taxRate,total=subtotal+taxAmount;debugger;return console.log("Subtotal:",subtotal),console.log("Tax:",taxAmount),console.log("Total:",total),{subtotal,tax:taxAmount,total}}const utils={formatCurrency:function(amount,currency="USD"){return new Intl.NumberFormat("en-US",{style:"currency",currency}).format(amount)},debounce:function(func,wait){let timeout;return function(...args){clearTimeout(timeout),timeout=setTimeout(()=>{clearTimeout(timeout),func(...args)},wait)}},validateEmail:function(email){return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)}};function unusedFunction(){return console.log("This function is never called"),"unused"}class ShoppingCart{constructor(){this.items=[],this.taxRate=.08}addItem(item){this.items.push(item),console.log("Added item to cart:",item.name)}removeItem(itemId){this.items=this.items.filter(item=>item.id!==itemId),console.log("Removed item from cart:",itemId)}getTotal(){return calculateTotalPrice(this.items,this.taxRate)}clear(){this.items=[],console.log("Cart cleared")}}module.exports={calculateTotalPrice,utils,ShoppingCart},"undefined"!=typeof window&&(window.calculator={calculateTotalPrice,utils,ShoppingCart});
