# Build stage
FROM local-ubuntu-image as builder


# Prevent interactive prompts during package installation
ENV DEBIAN_FRONTEND=noninteractive

# Install build dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    git \
    libssl-dev \
    zlib1g-dev \
    libuv1-dev \
    python3 \
    python3-pip \
    && rm -rf /var/lib/apt/lists/*

# Clone uWebSockets repository
WORKDIR /deps
RUN git clone --recurse-submodules https://github.com/uNetworking/uWebSockets.git

# Build uWebSockets
WORKDIR /deps/uWebSockets
RUN make -j$(nproc)



# Install uWebSockets headers to system include path
RUN mkdir -p /usr/local/include/uwebsockets && \
    cp -r src/* /usr/local/include/uwebsockets/ && \
    mkdir -p /usr/local/include/usockets && \
    cp -r uSockets/src/* /usr/local/include/usockets/ && \
    ln -s /usr/local/include/usockets/libusockets.h /usr/local/include/libusockets.h

# Debug: Find libusockets.h
RUN echo "Searching for libusockets.h:" && \
    find /usr/local/include -name "libusockets.h" && \
    echo "Contents of /usr/local/include/usockets:" && \
    ls -la /usr/local/include/usockets/ && \
    echo "Contents of /usr/local/include:" && \
    ls -la /usr/local/include/

# Copy project files
WORKDIR /app
COPY main.cpp .
COPY CMakeLists.txt .


# Copy uWebSockets to the location expected by CMakeLists.txt
RUN cp -r /deps/uWebSockets ./uWebSockets

#RUN echo "uWebSockets path: /app/uWebSockets"

# Debug: List contents to verify structure
#RUN ls -l /app && ls -l /app/uWebSockets && ls -l /app/uWebSockets/src

# Build the project using direct g++ compilation
RUN g++ -std=c++20 -O2 main.cpp \
    /deps/uWebSockets/uSockets/*.o \
    -L/deps/uWebSockets \
    -lpthread -lssl -lcrypto -lz -o server


# # Build the project using the provided Makefile
# RUN make

# Runtime stage
FROM local-ubuntu-image

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    libssl3 \
    zlib1g \
    libuv1 \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy the built binary from the builder stage
COPY --from=builder /app/server ./server

# Default command
CMD ["./server"] 