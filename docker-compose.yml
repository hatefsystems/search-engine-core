
services:
  zookeeper:
    image: bitnami/zookeeper:3.9
    container_name: zookeeper
    restart: unless-stopped
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    networks:
      - search-network

  kafka:
    image: bitnami/kafka:3.7
    container_name: kafka
    restart: unless-stopped
    depends_on:
      - zookeeper
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - "9092:9092"
    healthcheck:
      test: ["CMD", "bash", "-c", "kafka-topics.sh --bootstrap-server localhost:9092 --list || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - search-network
  search-engine:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: core
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017
      - SEARCH_REDIS_URI=tcp://redis:6379
      - SEARCH_REDIS_POOL_SIZE=4
      - SEARCH_INDEX_NAME=search_index
      - MINIFY_JS=false
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_FRONTIER_TOPIC=crawl.frontier
    depends_on:
      - redis
      - mongodb
      - kafka
    networks:
      - search-network
    dns:
      - 8.8.8.8
      - 1.1.1.1
      - 8.8.4.4

  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - search-network

  mongodb:
    image: mongodb/mongodb-enterprise-server:latest
    container_name: mongodb_test
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGODB_INITDB_ROOT_USERNAME=admin
      - MONGODB_INITDB_ROOT_PASSWORD=password123
    command: mongod --bind_ip_all
    networks:
      - search-network

  browserless:
    image: browserless/chrome:latest
    container_name: browserless
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - "MAX_CONCURRENT_SESSIONS=30"
      - "PREBOOT_CHROME=true"
      - "CONNECTION_TIMEOUT=60000"
      - "QUEUE_LIMIT=100"
      - "MAX_CPU_PERCENT=95"
      - "MAX_MEMORY_PERCENT=95"
    networks:
      - search-network
    dns:
      - 8.8.8.8
      - 1.1.1.1
      - 8.8.4.4
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  # mongodb-test:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.test.mongo
  #   depends_on:
  #     - mongodb
  #   environment:
  #     - MONGODB_URI=mongodb://mongodb:27017

networks:
  search-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data: 